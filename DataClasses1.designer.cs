#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OOPFinalProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OOPSTORE")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertITEM(ITEM instance);
    partial void UpdateITEM(ITEM instance);
    partial void DeleteITEM(ITEM instance);
    partial void Insertitem_purchase(item_purchase instance);
    partial void Updateitem_purchase(item_purchase instance);
    partial void Deleteitem_purchase(item_purchase instance);
    partial void InsertPURCHASE(PURCHASE instance);
    partial void UpdatePURCHASE(PURCHASE instance);
    partial void DeletePURCHASE(PURCHASE instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::OOPFinalProject.Properties.Settings.Default.OOPSTOREConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<ITEM> ITEMs
		{
			get
			{
				return this.GetTable<ITEM>();
			}
		}
		
		public System.Data.Linq.Table<item_purchase> item_purchases
		{
			get
			{
				return this.GetTable<item_purchase>();
			}
		}
		
		public System.Data.Linq.Table<PURCHASE> PURCHASEs
		{
			get
			{
				return this.GetTable<PURCHASE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cust_id;
		
		private string _cust_username;
		
		private string _cust_pass;
		
		private string _cust_fname;
		
		private string _cust_lname;
		
		private string _cust_street;
		
		private string _cust_city;
		
		private string _cust_state;
		
		private string _cust_zip;
		
		private string _cust_phone;
		
		private System.Nullable<decimal> _cust_balance;
		
		private EntitySet<PURCHASE> _PURCHASEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void Oncust_usernameChanging(string value);
    partial void Oncust_usernameChanged();
    partial void Oncust_passChanging(string value);
    partial void Oncust_passChanged();
    partial void Oncust_fnameChanging(string value);
    partial void Oncust_fnameChanged();
    partial void Oncust_lnameChanging(string value);
    partial void Oncust_lnameChanged();
    partial void Oncust_streetChanging(string value);
    partial void Oncust_streetChanged();
    partial void Oncust_cityChanging(string value);
    partial void Oncust_cityChanged();
    partial void Oncust_stateChanging(string value);
    partial void Oncust_stateChanged();
    partial void Oncust_zipChanging(string value);
    partial void Oncust_zipChanged();
    partial void Oncust_phoneChanging(string value);
    partial void Oncust_phoneChanged();
    partial void Oncust_balanceChanging(System.Nullable<decimal> value);
    partial void Oncust_balanceChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._PURCHASEs = new EntitySet<PURCHASE>(new Action<PURCHASE>(this.attach_PURCHASEs), new Action<PURCHASE>(this.detach_PURCHASEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_username", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string cust_username
		{
			get
			{
				return this._cust_username;
			}
			set
			{
				if ((this._cust_username != value))
				{
					this.Oncust_usernameChanging(value);
					this.SendPropertyChanging();
					this._cust_username = value;
					this.SendPropertyChanged("cust_username");
					this.Oncust_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_pass", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string cust_pass
		{
			get
			{
				return this._cust_pass;
			}
			set
			{
				if ((this._cust_pass != value))
				{
					this.Oncust_passChanging(value);
					this.SendPropertyChanging();
					this._cust_pass = value;
					this.SendPropertyChanged("cust_pass");
					this.Oncust_passChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_fname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string cust_fname
		{
			get
			{
				return this._cust_fname;
			}
			set
			{
				if ((this._cust_fname != value))
				{
					this.Oncust_fnameChanging(value);
					this.SendPropertyChanging();
					this._cust_fname = value;
					this.SendPropertyChanged("cust_fname");
					this.Oncust_fnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_lname", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string cust_lname
		{
			get
			{
				return this._cust_lname;
			}
			set
			{
				if ((this._cust_lname != value))
				{
					this.Oncust_lnameChanging(value);
					this.SendPropertyChanging();
					this._cust_lname = value;
					this.SendPropertyChanged("cust_lname");
					this.Oncust_lnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_street", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string cust_street
		{
			get
			{
				return this._cust_street;
			}
			set
			{
				if ((this._cust_street != value))
				{
					this.Oncust_streetChanging(value);
					this.SendPropertyChanging();
					this._cust_street = value;
					this.SendPropertyChanged("cust_street");
					this.Oncust_streetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_city", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string cust_city
		{
			get
			{
				return this._cust_city;
			}
			set
			{
				if ((this._cust_city != value))
				{
					this.Oncust_cityChanging(value);
					this.SendPropertyChanging();
					this._cust_city = value;
					this.SendPropertyChanged("cust_city");
					this.Oncust_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_state", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string cust_state
		{
			get
			{
				return this._cust_state;
			}
			set
			{
				if ((this._cust_state != value))
				{
					this.Oncust_stateChanging(value);
					this.SendPropertyChanging();
					this._cust_state = value;
					this.SendPropertyChanged("cust_state");
					this.Oncust_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_zip", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string cust_zip
		{
			get
			{
				return this._cust_zip;
			}
			set
			{
				if ((this._cust_zip != value))
				{
					this.Oncust_zipChanging(value);
					this.SendPropertyChanging();
					this._cust_zip = value;
					this.SendPropertyChanged("cust_zip");
					this.Oncust_zipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_phone", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string cust_phone
		{
			get
			{
				return this._cust_phone;
			}
			set
			{
				if ((this._cust_phone != value))
				{
					this.Oncust_phoneChanging(value);
					this.SendPropertyChanging();
					this._cust_phone = value;
					this.SendPropertyChanged("cust_phone");
					this.Oncust_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_balance", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> cust_balance
		{
			get
			{
				return this._cust_balance;
			}
			set
			{
				if ((this._cust_balance != value))
				{
					this.Oncust_balanceChanging(value);
					this.SendPropertyChanging();
					this._cust_balance = value;
					this.SendPropertyChanged("cust_balance");
					this.Oncust_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_PURCHASE", Storage="_PURCHASEs", ThisKey="cust_id", OtherKey="cust_id")]
		public EntitySet<PURCHASE> PURCHASEs
		{
			get
			{
				return this._PURCHASEs;
			}
			set
			{
				this._PURCHASEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PURCHASEs(PURCHASE entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_PURCHASEs(PURCHASE entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ITEM")]
	public partial class ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _upc;
		
		private string _item_desc;
		
		private System.Nullable<int> _item_qty;
		
		private System.Nullable<decimal> _item_price;
		
		private EntitySet<item_purchase> _item_purchases;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnupcChanging(int value);
    partial void OnupcChanged();
    partial void Onitem_descChanging(string value);
    partial void Onitem_descChanged();
    partial void Onitem_qtyChanging(System.Nullable<int> value);
    partial void Onitem_qtyChanged();
    partial void Onitem_priceChanging(System.Nullable<decimal> value);
    partial void Onitem_priceChanged();
    #endregion
		
		public ITEM()
		{
			this._item_purchases = new EntitySet<item_purchase>(new Action<item_purchase>(this.attach_item_purchases), new Action<item_purchase>(this.detach_item_purchases));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int upc
		{
			get
			{
				return this._upc;
			}
			set
			{
				if ((this._upc != value))
				{
					this.OnupcChanging(value);
					this.SendPropertyChanging();
					this._upc = value;
					this.SendPropertyChanged("upc");
					this.OnupcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_desc", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string item_desc
		{
			get
			{
				return this._item_desc;
			}
			set
			{
				if ((this._item_desc != value))
				{
					this.Onitem_descChanging(value);
					this.SendPropertyChanging();
					this._item_desc = value;
					this.SendPropertyChanged("item_desc");
					this.Onitem_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_qty", DbType="Int")]
		public System.Nullable<int> item_qty
		{
			get
			{
				return this._item_qty;
			}
			set
			{
				if ((this._item_qty != value))
				{
					this.Onitem_qtyChanging(value);
					this.SendPropertyChanging();
					this._item_qty = value;
					this.SendPropertyChanged("item_qty");
					this.Onitem_qtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_price", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> item_price
		{
			get
			{
				return this._item_price;
			}
			set
			{
				if ((this._item_price != value))
				{
					this.Onitem_priceChanging(value);
					this.SendPropertyChanging();
					this._item_price = value;
					this.SendPropertyChanged("item_price");
					this.Onitem_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_item_purchase", Storage="_item_purchases", ThisKey="upc", OtherKey="upc")]
		public EntitySet<item_purchase> item_purchases
		{
			get
			{
				return this._item_purchases;
			}
			set
			{
				this._item_purchases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_item_purchases(item_purchase entity)
		{
			this.SendPropertyChanging();
			entity.ITEM = this;
		}
		
		private void detach_item_purchases(item_purchase entity)
		{
			this.SendPropertyChanging();
			entity.ITEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item_purchase")]
	public partial class item_purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _upc;
		
		private int _purchase_id;
		
		private EntityRef<ITEM> _ITEM;
		
		private EntityRef<PURCHASE> _PURCHASE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnupcChanging(int value);
    partial void OnupcChanged();
    partial void Onpurchase_idChanging(int value);
    partial void Onpurchase_idChanged();
    #endregion
		
		public item_purchase()
		{
			this._ITEM = default(EntityRef<ITEM>);
			this._PURCHASE = default(EntityRef<PURCHASE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int upc
		{
			get
			{
				return this._upc;
			}
			set
			{
				if ((this._upc != value))
				{
					if (this._ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnupcChanging(value);
					this.SendPropertyChanging();
					this._upc = value;
					this.SendPropertyChanged("upc");
					this.OnupcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchase_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int purchase_id
		{
			get
			{
				return this._purchase_id;
			}
			set
			{
				if ((this._purchase_id != value))
				{
					if (this._PURCHASE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpurchase_idChanging(value);
					this.SendPropertyChanging();
					this._purchase_id = value;
					this.SendPropertyChanged("purchase_id");
					this.Onpurchase_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_item_purchase", Storage="_ITEM", ThisKey="upc", OtherKey="upc", IsForeignKey=true)]
		public ITEM ITEM
		{
			get
			{
				return this._ITEM.Entity;
			}
			set
			{
				ITEM previousValue = this._ITEM.Entity;
				if (((previousValue != value) 
							|| (this._ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ITEM.Entity = null;
						previousValue.item_purchases.Remove(this);
					}
					this._ITEM.Entity = value;
					if ((value != null))
					{
						value.item_purchases.Add(this);
						this._upc = value.upc;
					}
					else
					{
						this._upc = default(int);
					}
					this.SendPropertyChanged("ITEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PURCHASE_item_purchase", Storage="_PURCHASE", ThisKey="purchase_id", OtherKey="purchase_id", IsForeignKey=true)]
		public PURCHASE PURCHASE
		{
			get
			{
				return this._PURCHASE.Entity;
			}
			set
			{
				PURCHASE previousValue = this._PURCHASE.Entity;
				if (((previousValue != value) 
							|| (this._PURCHASE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PURCHASE.Entity = null;
						previousValue.item_purchases.Remove(this);
					}
					this._PURCHASE.Entity = value;
					if ((value != null))
					{
						value.item_purchases.Add(this);
						this._purchase_id = value.purchase_id;
					}
					else
					{
						this._purchase_id = default(int);
					}
					this.SendPropertyChanged("PURCHASE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PURCHASE")]
	public partial class PURCHASE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _purchase_id;
		
		private int _cust_id;
		
		private System.Nullable<decimal> _total_price;
		
		private System.Nullable<System.DateTime> _purchase_date;
		
		private EntitySet<item_purchase> _item_purchases;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpurchase_idChanging(int value);
    partial void Onpurchase_idChanged();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void Ontotal_priceChanging(System.Nullable<decimal> value);
    partial void Ontotal_priceChanged();
    partial void Onpurchase_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onpurchase_dateChanged();
    #endregion
		
		public PURCHASE()
		{
			this._item_purchases = new EntitySet<item_purchase>(new Action<item_purchase>(this.attach_item_purchases), new Action<item_purchase>(this.detach_item_purchases));
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchase_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int purchase_id
		{
			get
			{
				return this._purchase_id;
			}
			set
			{
				if ((this._purchase_id != value))
				{
					this.Onpurchase_idChanging(value);
					this.SendPropertyChanging();
					this._purchase_id = value;
					this.SendPropertyChanged("purchase_id");
					this.Onpurchase_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int NOT NULL")]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> total_price
		{
			get
			{
				return this._total_price;
			}
			set
			{
				if ((this._total_price != value))
				{
					this.Ontotal_priceChanging(value);
					this.SendPropertyChanging();
					this._total_price = value;
					this.SendPropertyChanged("total_price");
					this.Ontotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchase_date", DbType="Date")]
		public System.Nullable<System.DateTime> purchase_date
		{
			get
			{
				return this._purchase_date;
			}
			set
			{
				if ((this._purchase_date != value))
				{
					this.Onpurchase_dateChanging(value);
					this.SendPropertyChanging();
					this._purchase_date = value;
					this.SendPropertyChanged("purchase_date");
					this.Onpurchase_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PURCHASE_item_purchase", Storage="_item_purchases", ThisKey="purchase_id", OtherKey="purchase_id")]
		public EntitySet<item_purchase> item_purchases
		{
			get
			{
				return this._item_purchases;
			}
			set
			{
				this._item_purchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_PURCHASE", Storage="_CUSTOMER", ThisKey="cust_id", OtherKey="cust_id", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.PURCHASEs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.PURCHASEs.Add(this);
						this._cust_id = value.cust_id;
					}
					else
					{
						this._cust_id = default(int);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_item_purchases(item_purchase entity)
		{
			this.SendPropertyChanging();
			entity.PURCHASE = this;
		}
		
		private void detach_item_purchases(item_purchase entity)
		{
			this.SendPropertyChanging();
			entity.PURCHASE = null;
		}
	}
}
#pragma warning restore 1591
